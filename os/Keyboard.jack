// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int address;

    /** Initializes the keyboard. */
    function void init() {
        let address = 24576;
        return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
       return Memory.peek(address);
    }

    /**	Waits until a key is pressed on the keyboard and released,
     *  then echoes the key to the screen, and returns the character
     *  of the pressed key. */
    function char readChar() {
        var char key;

        let key = Keyboard.keyPressed();
        while (key = 0) {
            let key = Keyboard.keyPressed();
        }

        while (~(Keyboard.keyPressed() = 0)) {

        }
        do Output.printChar(key);

        return key;
    }

    /**	Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its value. Also handles user backspaces. */
    function String readLine(String message) {
        var String input;
        var char key;
        var int len;
        do Output.printString(message);
        do Output.println();

        let input = String.new(30);
        let len = 0;

        let key = Keyboard.readChar();
        while (~(key = 128)) {
            if (key = 129) {
                if (len > 0) {
                    let len = len - 1;
                    do input.eraseLastChar();
                }
            } else {
                if (len = 30) {
                    return input;
                }

                let input = input.appendChar(key);
                let len = len + 1;
            }
            let key = Keyboard.readChar();
        }

        return input;
    }

    /** Displays the message on the screen, reads from the keyboard the entered
     *  text until a newline character is detected, echoes the text to the screen,
     *  and returns its integer value (until the first non-digit character in the
     *  entered text is detected). Also handles user backspaces. */
    function int readInt(String message) {
        // TODO: handle overflow

        var int num;
        var char key;
        var int sign;
        do Output.printString(message);
        do Output.println();

        let num = 0;
        let sign = 1;

        let key = Keyboard.readChar();
        while (~(key = 128)) {
            if (key = 129) {
                if (num > 0) {
                    let num = Math.divide(num, 10);
                }
            } else {
                if (num > 10000) {
                    return Math.multiply(num, sign);
                }

                if (key = 45) {
                    if (sign = 1) {
                        let sign = -1;
                    } else {
                        return Math.multiply(num, sign);
                    }
                } else {
                    if (key < 48) {
                        return Math.multiply(num, sign);
                    }
                    if (key > 57) {
                        return Math.multiply(num, sign);
                    }

                    let num = Math.multiply(num, 10);
                    let num = num + (key - 48);
                }
            }
            let key = Keyboard.readChar();
        }

        return Math.multiply(num, sign);
    }
}
